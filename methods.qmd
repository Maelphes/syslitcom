---
format: html
bibliography: glossar.bib
link-citations: true
link-bibliography: true
filters:
  - parse-latex
---

# Methods {#sec-methods}

## Boolean operators {#sec-boolean}

Databases usually allow a search to be structured using the three basic 
operations of Boolean algebra, which are expressed with the 
**Boolean operators** `AND` (conjunction), `OR` (disjunction) and `NOT` 
(negation). The `AND` operator creates an intersection of sets, `OR` creates a 
union of sets and `NOT` excludes sets (see @fig-boolean).

![Boolean Operators](./fig/boole.svg){#fig-boolean width=80%}

::: {.callout-tip title="Examples"}
- The query `"heart attack" AND diabetes AND obesity` retrieves only records 
featuring all three terms. 
- The query `"cardiac arrest" OR asystole` retrieves records containing at 
least one of the two terms. 
- The query `animals NOT humans` removes all records mentioning humans from the
set `animals`. 
:::

::: {.callout-important title="Caution"}
Using the `NOT` operator can be dangerous, as it excludes records regardless of
any relevant search terms they might contain. The above example excludes also
records with animals if they mention humans.
:::

### Properties {.unnumbered}

The Boolean operators `AND` and `OR` possess similar properties as the 
multiplication and addition. See @tbl-booleanproperties. (@ORegan2012)

::: {#tbl-booleanproperties}
```python
 (a OR b) = (b OR a)                        # <1>
 (a AND b) = (b AND a)                      # <1>
 ----
 (a OR b) OR c = a OR (b OR c)              # <2>
 (a AND b) AND c = a AND (b AND c)          # <2>
 ----
 a AND (b OR c) = (a AND b) OR (a AND c)    # <3>
 a OR (b AND c) = (a OR b) AND (a OR c)     # <3>
 ```
1. commutative property
2. associative property
3. distributive property
:::


## citation analysis {#sec-citationanalysis}

Relevant references can be retrieved by analyzing citation relationships between
known relevant articles (*core papers*) and cited or citing references. This 
technique is called **citation analysis** or **citation tracking** (@Hirt2021, 
@Belter2016, @Hinde2015.

Citation analysis can be advisable at the very beginning of a systematic 
literature search in order to find additional core papers and to identify 
additional search terms. After finishing the final search it can be used to 
find additional relevant studies that were not retrieved by systematic searching
using search strategies.

There are different approaches to tracking citations: First, in the **backward 
citation tracking** method the lists of references cited in the core papers are 
screened for relevant articles. Second, the analysis of publications citing the 
core paper as reference is called **forward citation tracking**. 
See @fig-citing-cited. 

![backward and forward citation tracking](./fig/citing-cited.svg){#fig-citing-cited width=80%}


Third, the identification of relevant literature by counting co-cited or co-citing 
references is called **co-citation tracking**, see @fig-cociting and @fig-cocited.

![co-citation tracking using the citing articles which the core paper has in common with other papers](./fig/co-citing.svg){#fig-cociting width=80%}

![co-citation tracking using the cited references which the core paper has in common with other papers](./fig/co-cited.svg){#fig-cocited width=80%}


## filters {#sec-filters}

Filters (also search filters, filter strategies or hedges) are search strategies
designed to retrieve records for a specific concept of the research question.

There are filters for specific patient groups or diseases, outcomes, study types
(for instance to retrieve only randomized controlled trials (RCTs), or filters 
for other aspects of the research question, e.g. adverse effects, diagnostic 
accuracy or patient values. (@Waffenschmidt2020, @SalvadorOlivan2021, @Lee2012, @Golder2006a)

Validated filters are developed, tested and optimized for sensitivity and 
precision by experts. (@Haynes2004, @Glanville2008)

Filter strategies can be implemented in a search strategy just like any concept 
of the research question. @tbl-filterstrategy illustrates a search strategy with
a short qualitative research filter in lines 8 to 11, which is added to the 
overall search in line 12. (see also @sec-searchstrategy).

::: {#tbl-filterstrategy}
```python
1	hypertension/
2	(hypertension or high blood pressure).ti,ab.
3	1 or 2
4	exp patient attitude/
5	*patient satisfaction/
6	(choice$ or empower$).ti.
7	or/4-6
8	interview$.mp.
9	experience$.mp.
10	qualitative.tw.
11	or/8-10
12	3 and 7 and 11
```
:::

::: {.callout-tip title="Sources of filter strategies" collapse="true"}
- [ISSG Search Filter Resource](https://sites.google.com/a/york.ac.uk/issg-search-filters-resource)
- [Canadian Agency for Drugs and Technologies in Health (CADTH)](https://searchfilters.cadth.ca/)
- [SIGN Health Improvement Scotland](https://www.sign.ac.uk/what-we-do/methodology/search-filters)
- [McMaster University](https://hiru.mcmaster.ca/hiru/HIRU_Hedges_MEDLINE_Strategies.aspx)
- [Cochrane](https://work.cochrane.org/pubmed)
- [Ovid (Wolters Kluwer)](https://tools.ovid.com/ovidtools/expertsearches.html)
- [PubMed Clinical Queries](https://pubmed.ncbi.nlm.nih.gov/help/\#clinical-queries-filters)
:::

## field code {#sec-fieldcode}
The data fields of databases possess short designations called **field codes**, 
field tags or field labels, which allow to search the fields separately as part 
of a search query or search strategy (see @sec-searchstrategy). Depending on the
syntax of the database or search interface different field codes are available 
for searching. If no field code is used in a search query, the search term is 
usually searched in all fields or a preset variety of fields. 

::: {.callout-tip title="Example"}
In PubMed the query `hypnosis[TIAB]` will basically search for records with 
"hypnosis" in the title or abstract. In Ovid the same search would be written 
as `hypnosis.ti,ab.`
:::

See also <https://pubmed.gov/help/#search-tags> and <https://ospguides.ovid.com/OSPguides/medline.htm#search>.

## focus 
**Focus topics** (also called **major topics**) are weighted index terms. If a 
particular topic is at the heart of a publication, index terms for that topic 
will be assigned as a so-called focus topic. This is often displayed in the
databases by writing an [asterisk](https://en.wikipedia.org/wiki/Asterisk) 
before or after the index term.

::: {.callout-warning title="Risk of confusion"}
The asterisk `*` appears also as a wildcard character for truncation. The two 
look the same, but have different meanings and uses. Don't let them confound 
you.
:::

By labeling an index term this way, its significance for the publication is 
visualized. Moreover, searching for the focus topic instead of the index term 
allows for a search to be focused only on the most important papers for a 
particular topic.

:::  {.callout-tip title="Example"}
1. A systematic review on hypertension will most likely feature the focus topic 
`*hypertension`, whereas an artikle about vascular diseases might be indexed 
with `hypertension` as a normal subject heading. Searching for 
`hypertension[majr]` in PubMed or `*hypertension/` in Ovid would yield only the 
first of those two articles. A search for `hypertension[mh]` `hypertension/` 
would find both of them.

2. The article [Apnoeic oxygenation during paediatric tracheal intubation](https://pubmed.ncbi.nlm.nih.gov/38030551/) by 
@Fuchs2024 is indexed with `Intubation, Intratracheal* / adverse effects` and 
`Intubation, Intratracheal* / methods` as major topics, whereas 
`Hypoxia / etiology` was added as a regular MeSH term as it is not the main 
focus of the article.
:::

## frequency operators {#sec-frequencyops}
Records in which a relevant expression occurs multiple times might be more 
relevant than records with fewer instances of the same expression. Therefore 
some search interfaces allow the use of a so-called frequency operator, which 
only retrieves records only if the search term occurs at least the specified 
number of times in the searched data field. 

::: {.callout-tip title="Example"}
Example from Ovid: The query `"pharmacy".ab/freq=5` will retrieve articles, in 
which the term `pharmacy` occurs at least five times within the abstract.
:::


## limits {#sec-limits}
There are various means to restrict the results of a search. One of them are 
so-called limits which are filter options provided by the search interface,
which allow the search results to be limited to characteristics such as 
publication type, language or year of publication.

::: {.callout-warning}
1. Database limits are not to be mistaken for validated filter strategies. Limits 
are usually based on certain data fields, whereas validated search filters are 
more complex search strategies. See also @sec-filters.

2. Database limits based on index terms may lead to the unintended exclusion of
non-indexed records.

3. The usage of database limits is not always evident from the search history. 
If it is not possible to display applied limits in the search history, its use
should be reported in the documentation.
:::


## nesting {#sec-nesting}

**Nesting** refers to the use of parentheses `( )` to group search terms within 
a query. The purpose of nesting a search query is to define the order in which 
the search terms and operators processed. The properties of the operators in 
combination with parentheses are displayed in @tbl-booleanproperties.

Without nesting the order in which the elements of a search query are processed 
depends on the rules of the respective search interface. This means that the 
same query might produce very different results in the individual databases.

::: {.callout-tip title="Examples"}
1. Within PubMed all searches are processed [in a left-to-right sequence](https://pubmed.ncbi.nlm.nih.gov/help/#combining-with-boolean-operators). 

Thus the following PubMed queries yield completely different results:

- `exercise[MH] AND infection[MH] OR heart[MH]`
- `exercise[MH] AND heart[MH] OR infection[MH]`
- `heart[MH] OR infection[MH] AND exercise[MH]`

On the other hand the following nested queries are identical:

- `exercise[MH] AND (infection[MH] OR heart[MH])`
- `exercise[MH] AND (heart[MH] OR infection[MH])`
- `(heart[MH] OR infection[MH]) AND exercise[MH]`

2. Web of Science executes the search in an [order of precedence](https://webofscience.help.clarivate.com/en-us/Content/search-operators.html#Search) of the operators.
:::

## phrases {#sec-phrases}

Most databases can be searched for verbatim expressions, called _phrases_ or 
_literal strings_, by putting search terms in quotation marks `" "`. 

::: {.callout-note title="Effects"} 
The use of phrases usually terminates any automatically applied 
techniques, such as _lemmatization_, _stemming_ or _automated term mapping_ 
(ATM) for those expressions. In this way, the use of phrases usually reduces the 
amount of search results as it makes the search more precise and less sensitive.

Example:

Due to automated term mapping the PubMed query `heart arrest` will be translated
to  
`"heart arrest"[MeSH Terms] OR "heart"[All Fields] AND "arrest"[All Fields] OR "heart arrest"[All Fields]`

However, the query `"heart arrest"` translates to `"heart arrest"[All Fields]`, 
because [phrases are not automatically mapped in PubMed](https://pubmed.ncbi.nlm.nih.gov/help/#searching-for-a-phrase).
:::

::: {.callout-warning title="Phrases and Truncation"}
In some cases the simultaneous use of phrases and truncation is not supported by
the search interface.

Searching for `"hearing aid*"` in the Cochrane Library will prompt an error
message suggesting the use of the `NEXT` operator to work around the problem. 
In other words, the search query should be `hearing NEXT aid*` instead.
:::

::: {.callout-tip title="Required quotation marks"}
Phrases are absolutely necessary when the search string contains a special 
character or anything the search interface would interpret as an operator or 
syntax. Examples for Ovid:

- `"go/no-go".ti,ab.` -- Without the quotation marks the forward slash `/` would
be understood as command to search the expression `go` as an index term.
- `"Sensitivity and Specificity"/` -- `and` is also an operator and must be 
escaped using the quotation marks.
- `"5".ip` -- This search retrieves all records with the number 5 in the 
Issue/Part field. Without the quotation marks, the query would search for the
*contents of line 5* in the field `.ip`. (That procedure is called 
*postqualification* of search sets). 
:::

::: {.callout-warning title="Straight quotes vs. curly quotes"}
There are several types of [quotation marks](https://en.wikipedia.org/wiki/Quotation_mark). 
Search interfaces often only understand so-called _straight quotes_ `" "` (the 
ones that have been used in typewriters). Modern word processors often change 
straight quotes automatically into the [typographically correct](https://practicaltypography.com/straight-and-curly-quotes.html) 
_curly quotes_ `“ ”` (the way they are printed in books), which can cause a 
syntax error, if they are copied into a search query. This is a [known issue in Ovid](https://wkhealth.force.com/ovidsupport/s/article/How-can-I-copy-and-paste-my-search-strategy-from-Word-to-Ovid). 

Options to counter this problem:

1. Deactivation of the responsible autocorrection feature of the word processor.
2. Using a simpler [plain text editor](https://en.wikipedia.org/wiki/Text_editor).
:::

## search strategy {#sec-searchstrategy}
A **search strategy** is a coherent set of search queries designed to retrieve 
references for a particular topic. A search strategy is dependent on the syntax
and index terms of the searched database. As a consequence, the search strategy
needs to be translated for the use in other databases.

Search strategies are supposed to be consistent with the predefined eligibility 
criteria of the research project (@Gough2017).

Depending on the purpose and detail of the search, the extent of a search 
strategy might range from a simple search string to numerous lines of search 
terms connected by boolean operators (see @sec-boolean).

@tbl-searchstrategy-pubmed and @tbl-searchstrategy-ovid show examples for both 
types of search strategies.

::: {#tbl-searchstrategy-pubmed}
```default
"analgesics"[MH] OR "analgesic*"[TIAB] OR "analgesic*"[PA] OR "anodynes"[TIAB] 
OR "antinociceptive*"[TIAB]) AND "pain management"[MAJR]
```
Single-line [PubMed Search strategy](https://pubmed.ncbi.nlm.nih.gov/?term=%28%22analgesics%22%5BMH%5D+OR+%22analgesic%2A%22%5BTIAB%5D+OR+%22analgesic%2A%22%5BPA%5D+OR+%22anodynes%22%5BTIAB%5D+OR+%22antinociceptive%2A%22%5BTIAB%5D%29+AND+%22pain+management%22%5BMAJR%5D)
:::

::: {#tbl-searchstrategy-ovid}
```python
1 exp analgesics/
2 (analge#ic? or anodyne? or antinoceptive?).ti,ab,kw.
3 *pain management/
4 (1 or 2) and 3
```
Multi-line search strategy for Ovid MEDLINE
:::

